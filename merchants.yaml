swagger: "2.0"
info:
  version: "1.0.0"
  title: "店铺后台 APIs"
  description: "店铺后台的APIs"
  termsOfService: "https://jigang-duan.github.io/small-shops-apis/"
  contact:
    name: "段纪刚"
    email: "djg4055108@126.com"
    url: "http://swagger.io"
  license:
    name: "MIT"
    url: "http://opensource.org/licenses/MIT"
host: "btdxcx.com:3002"
# basePath: '/api'
schemes:
 - "http"
consumes:
 - "application/json"
produces:
 - "application/json"
tags:
 - name: Auth
   description: 身份认证
 - name: Shop
   description: 店铺管理
 - name: Taxons
   description: 分类(Taxons)，产品所属的类别
 - name: Product
   description: 产品
   
paths:
  /product/attributes:
    post:
      tags:
        - Product
      summary: 创建产品属性
      parameters:
        - in: body
          name: attributes
          required: true
          schema:
            $ref: '#/definitions/ProductAttributes'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/AttributesResponse'
    get:
      tags:
        - Product
      summary: 获得产品属性集合
      parameters:
      - name: offset
        in: query
        description: 起始位置
        required: false
        type: integer
      - name: limit
        in: query
        description: 预期产品属性的数量
        required: false
        type: integer
      responses:
        200:
          description: 响应
          schema:
            $ref: '#/definitions/AttributesPage'
  /product/attributes/{code}:
    get:
      tags:
        - Product
      summary: 获得单个产品属性
      parameters:
      - name: code
        in: path
        description: 产品属性标识符
        required: true
        type: string
      responses:
        200:
          description: 产品属性响应
          schema:
            $ref: '#/definitions/AttributesResponse'
    put:
      tags:
        - Product
      summary: 更新产品属性
      parameters:
        - name: code
          in: path
          description: 产品属性标识符
          required: true
          type: string
        - in: body
          name: attributes
          required: true
          schema:
            $ref: '#/definitions/ProductAttributes'
      responses:
        204:
          description: 更新成功
    delete:
      tags:
        - Product
      summary: 删除产品属性
      parameters:
        - name: code
          in: path
          description: 产品属性标识符
          required: true
          type: string
      responses:
        204:
          description: 删除成功

  /product/options:
    post:
      tags:
        - Product
      summary: 创建产品选项
      parameters:
        - in: body
          name: options
          required: true
          schema:
            $ref: '#/definitions/ProductOptions'
      responses:
        201:
          description: created
          schema:
            $ref: '#/definitions/ProductOptions'
    get:
      tags:
        - Product
      summary: 获得产品选项集合
      parameters:
      - name: offset
        in: query
        description: 起始位置
        required: false
        type: integer
      - name: limit
        in: query
        description: 预期产品选项的数量
        required: false
        type: integer
      responses:
        200:
          description: page
          schema:
            $ref: '#/definitions/OptionsPage'
  /product/options/{code}:
    get:
      tags:
        - Product
      summary: 获得单个产品选项
      parameters:
        - name: code
          in: path
          description: 产品选项标识符
          required: true
          type: string
      responses:
        200:
          description: option
          schema:
            $ref: '#/definitions/ProductOptions'
    put:
      tags:
        - Product
      summary: 更新产品选项
      parameters:
        - name: code
          in: path
          description: 产品选项标识符
          required: true
          type: string
        - in: body
          name: options
          required: true
          schema:
            $ref: '#/definitions/ProductOptions'
      responses:
        204:
          description: 更新成功
    delete:
      tags:
        - Product
      summary: 删除产品选项
      parameters:
        - name: code
          in: path
          description: 产品选项标识符
          required: true
          type: string
      responses:
        204:
          description: 删除成功
  /products:
    post:
      tags:
        - Product
      summary: 创建产品
      description: 创建产品
      operationId: createProduct
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: options
          required: true
          schema:
            $ref: '#/definitions/CreateProductRequest'
      responses:
        201:
          description: 创建成功
          schema:
            $ref: '#/definitions/Product'
    get:
      tags:
        - Product
      summary: 获取产品集合
      description: 获取产品集合
      operationId: fetchProducts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      - name: offset
        in: query
        description: 起始位置
        required: false
        type: integer
      - name: limit
        in: query
        description: 预期产品的数量
        required: false
        type: integer
      responses:
        200:
          description: page
          schema:
            $ref: '#/definitions/ProductPage'
  /products/{spu}:
    get:
      tags:
        - Product
      summary: 获取单个产品
      description: 通过SPU获取单个产品
      operationId: fetchProduct
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
         - name: spu
           in: path
           description: 产品SPU
           required: true
           type: string
      responses:
        200:
          description: 成功
          schema:
            $ref: '#/definitions/Product'
    patch:
      tags:
        - Product
      summary: 更新产品
      description: 更新产品
      operationId: updateProduct
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: spu
          in: path
          description: 产品SPU
          required: true
          type: string
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/UpdateProductRequest'
      responses:
        204:
          description: 更新成功
  /products/{spu}/taxons:
    parameters:
      - name: spu
        in: path
        description: 产品SPU
        required: true
        type: string
    patch:
      tags:
        - Product
      summary: 更新产品分类
      description: 更新产品分类
      operationId: updateProductTaxons
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: taxons
          required: true
          schema:
            $ref: '#/definitions/ProductTaxon'
      responses:
        204:
          description: 更新成功
  /products/{spu}/attributes:
    parameters:
      - name: spu
        in: path
        description: 产品SPU
        required: true
        type: string
    post:
      tags:
        - Product
      summary: 给产品添加属性
      description: 给产品添加属性
      operationId: createProductAttributes
      parameters:
        - in: body
          name: attributes
          required: true
          schema:
            $ref: '#/definitions/ProductAttributesRequest'
      responses:
        201:
          description: 成功
  /products/{spu}/attributes/{code}:
    parameters:
      - name: spu
        in: path
        description: 产品SPU
        required: true
        type: string
      - name: code
        in: path
        description: 产品属性code
        required: true
        type: string
    put:
      tags:
        - Product
      summary: 更新产品添加属性
      description: 给产品添加属性
      operationId: updateProductAttributes
      parameters:
      - in: body
        name: value
        required: true
        schema:
          type: string
      responses:
        201:
          description: 成功  
    delete:
      tags:
        - Product
      summary: 删除产品添加属性
      description: 给产品添加属性
      operationId: deleteProductAttributes
      responses:
        204:
          description: 成功  
  /products/{spu}/associations:
    parameters:
      - name: spu
        in: path
        description: 产品SPU
        required: true
        type: string
    post:
      tags:
        - Product
      summary: 给产品添加关联产品
      description: 给产品添加关联产品
      operationId: createProductAssociations
      parameters:
        - in: body
          name: attributes
          required: true
          schema:
            $ref: '#/definitions/AssociationProduct'
      responses:
        201:
          description: 成功
  /products/{spu}/associations/{code}:
    parameters:
      - name: spu
        in: path
        description: 产品SPU
        required: true
        type: string
      - name: code
        in: path
        description: 产品关联code
        required: true
        type: string
    put:
      tags:
        - Product
      summary: 更新产品关联产品
      description: 给产品添加关联产品
      operationId: updateProductAssociation
      parameters:
        - in: body
          name: value
          required: true
          schema:
            $ref: '#/definitions/AssociationProduct'
      responses:
        201:
          description: 成功  
    delete:
      tags:
        - Product
      summary: 删除产品添加关联产品
      description: 给产品添加关联产品
      operationId: deleteProductAssociation
      responses:
        204:
          description: 成功
  /products/{spu}/images:
    parameters:
      - name: spu
        in: path
        description: 产品SPU
        required: true
        type: string
    post:
      tags:
        - Product
      summary: 给产品添加图片
      description: 给产品添加关联图片
      operationId: createProductImages
      parameters:
        - in: body
          name: attributes
          required: true
          schema:
            $ref: '#/definitions/Image'
      responses:
        201:
          description: 成功
  /products/{spu}/images/{code}:
    parameters:
      - name: spu
        in: path
        description: 产品SPU
        required: true
        type: string
      - name: code
        in: path
        description: 产品images code
        required: true
        type: string
    put:
      tags:
        - Product
      summary: 更新产品图片
      description: 更新产品图片
      operationId: updateProductImage
      parameters:
        - in: body
          name: value
          required: true
          schema:
            $ref: '#/definitions/Image'
      responses:
        201:
          description: 成功  
    delete:
      tags:
        - Product
      summary: 删除产品图片
      description: 删除产品图片
      operationId: deleteProductImage
      responses:
        204:
          description: 成功
  /products/{spu}/reviews:
    parameters:
      - name: spu
        in: path
        description: 产品SPU
        required: true
        type: string
    post:
      tags:
        - Product
      summary: 给产品添加评论
      description: 给产品添加评论
      operationId: createProductReviews
      parameters:
        - in: body
          name: content
          required: true
          schema:
            $ref: '#/definitions/ReviewsRequest'
      responses:
        201:
          description: 成功
    get:
      tags:
        - Product
      summary: 给产品添加评论
      description: 给产品添加评论
      operationId: fetchProductReviews
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      - name: offset
        in: query
        description: 起始位置
        required: false
        type: integer
      - name: limit
        in: query
        description: 预期产品的数量
        required: false
        type: integer
      responses:
        200:
          description: page
          schema:
            $ref: '#/definitions/ReviewsPage'
  /products/{spu}/reviews/{id}:
    parameters:
      - name: spu
        in: path
        description: 产品SPU
        required: true
        type: string
      - name: id
        in: path
        description: 评论id
        required: true
        type: string
    put:
      tags:
        - Product
      summary: 更新产品评论
      description: 给产品添加评论
      operationId: fetchProductReview
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: content
          required: true
          schema:
            $ref: '#/definitions/ReviewsRequest'
      responses:
        201:
          description: 成功
    delete:
      tags:
        - Product
      summary: 删除产品评论
      description: 删除产品评论
      operationId: deleteProductReviews
      responses:
        204:
          description: 成功
  /products/{spu}/reviews/{id}/accept:
    parameters:
      - name: spu
        in: path
        description: 产品SPU
        required: true
        type: string
      - name: id
        in: path
        description: 评论id
        required: true
        type: string
    patch:
      tags:
        - Product
      summary: 接受产品评论
      description: 接受一个产品评论
      operationId: accept
      responses:
        204:
          description: 成功
  /products/{spu}/reviews/{id}/reject:
    parameters:
      - name: spu
        in: path
        description: 产品SPU
        required: true
        type: string
      - name: id
        in: path
        description: 评论id
        required: true
        type: string
    patch:
      tags:
        - Product
      summary: 拒绝产品评论
      description: 拒绝一个产品评论
      operationId: reject
      responses:
        204:
          description: 成功
  /products/{spu}/variants:
    parameters:
      - name: spu
        in: path
        description: 产品SPU
        required: true
        type: string
    post:
      tags:
        - Product
      summary: 创建产品变体
      description: 创建产品变体
      operationId: createProductVariants
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: content
          required: true
          schema:
            $ref: '#/definitions/ProductVariants'
      responses:
        201:
          description: 成功
    get:
      tags:
        - Product
      summary: 获取产品变体
      description: 获取产品变体
      operationId: fetchProductVariants
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: 成功
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductVariants'
  /products/{spu}/variants/{sku}:
    parameters:
      - name: spu
        in: path
        description: 产品SPU
        required: true
        type: string
      - name: sku
        in: path
        description: 产品SKU
        required: true
        type: string
    get:
      tags:
        - Product
      summary: 获取产品变体
      description: 获取产品变体
      operationId: fetchProductVariant
      responses:
        200:
          description: 成功
          schema:
            $ref: '#/definitions/ProductVariants'
    put:
      tags:
        - Product
      summary: 更新产品变体
      description: 获取产品变体
      operationId: updateProductVariant
      parameters:
        - in: body
          name: content
          required: true
          schema:
            $ref: '#/definitions/ProductVariants'
      responses:
        201:
          description: 成功
    delete:
      tags:
        - Product
      summary: 删除产品变体
      description: 删除产品变体
      operationId: deleteProductVariant
      responses:
        204:
          description: 成功
        
  /shop/me:
    get:
      tags:
        - Shop
      summary: 获取店铺详情
      responses:
        200:
          description: 店铺详情
          schema:
            $ref: '#/definitions/ShopDetails'
    put:
      tags:
        - Shop
      summary: 修改店铺详情
      parameters:
        - in: body
          name: details
          required: true
          schema:
            $ref: '#/definitions/ShopDetails'
      responses:
        201:
          description: 成功
  /auth/signin:
    post:
      tags:
        - Auth
      summary: 用户登录
      description: 使用用户名和密码登录，获取Token
      operationId: signIn
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: content
          required: true
          schema:
            $ref: '#/definitions/AuthRequest'
      responses:
        201:
          description: 登录成功
          schema:
            $ref: '#/definitions/Token'
  /auth/signup:
    post:
      tags:
        - Auth
      summary: 用户注册
      description: 使用用户名和密码登录
      operationId: signUp
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: content
          required: true
          schema:
            $ref: '#/definitions/AuthRequest'
      responses:
        201:
          description: 登录成功
          schema:
            $ref: '#/definitions/Token'
  /auth/signout:
    delete:
      tags:
        - Auth
      summary: 用户登出
      description: 撤销Token
      responses:
        204:
          description: 登出成功
  /auth/password:
    put:
      tags:
        - Auth
      summary: 修改密码
      parameters:
        - in: body
          name: content
          required: true
          schema:
            $ref: '#/definitions/PasswordRequest'
      responses:
        201:
          description: 成功
  /auth/token:
    put:
      tags:
        - Auth
      summary: 刷新Token
      parameters:
        - in: body
          name: refresh_token
          required: true
          schema:
            $ref: '#/definitions/RefreshToken'
      responses:
        201:
          description: 成功
  /taxons:
    get:
      tags:
        - Taxons
      description: "所有可用的分类的数组及其所有子分类"
      operationId: "taxonTree"
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: 所有可用的分类的数组
          schema:
            type: array
            items:
              $ref: '#/definitions/Taxon'
    post:
      tags:
        - Taxons
      description: "创建根分类"
      operationId: "createRootTaxons"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: content
          required: true
          schema:
            $ref: '#/definitions/AddTaxonsRequest'
      responses:
        201:
          description: 创建分类成功
          schema:
            type: string
            example: "TAXONS_CODE"
  /taxons/{code}:
    parameters:
      - name: code
        in: path
        description: 分类code
        required: true
        type: string
    post:
      tags:
        - Taxons
      description: "创建{code}分类下的子分离"
      operationId: createTaxons
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: content
          required: true
          schema:
            $ref: '#/definitions/AddTaxonsRequest'
      responses:
        201:
          description: 创建分类成功
          schema:
            type: string
            example: "TAXONS_CODE"
    put:
      tags:
        - Taxons
      description: "更新{code}分类"
      operationId: updateTaxons
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: content
          required: true
          schema:
            $ref: '#/definitions/AddTaxonsRequest'
      responses:
        201:
          description: 更新分类成功
          schema:
            type: string
            example: "TAXONS_CODE"
    delete:
      tags: 
        - Taxons
      description: 删除{code}分类
      operationId: deleteTaxons  
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        204:
          description: 删除成功

definitions:
  GeneralError:
    description: 错误通用类型
    type: object
    properties:
      code:
        type: integer
        example: 400
      detail:
        type: string
        example: "none available"
        description: 错误描述
      status:
        type: string
        example: "Internal Server Error"
        description: 错误原因
  Image:
    description: 图片
    type: object
    properties:
      code:
        type: string
        example: thumbnail
        description: 图片类型如缩略图/展示图...
      path:
        type: string
        example: /uo/mug.jpg
        description: 图片路径
  Taxon:
    description: 分类
    type: object
    properties:
      code:
        type: string
        example: BREAD_CODE
        description: 分类标识
      name:
        type: string
        example: 面包
        description: 分类名字
      description:
        type: string
        example: 好吃的面包们都在这儿了
        description: 分类的描述信息
      position:
        type: integer
        description: 分类单元中的位置
        example: 0
      images:
        type: array
        items: 
          $ref: '#/definitions/Image'
      children:
        type: array
        description: "子分类"
        items:
          $ref: '#/definitions/Taxon'
  ProductTaxon:
    type: object
    description: "一个商品可以属于多种分类，只有一个主分类"
    properties:
      main:
        type: string
        example: MAIN_TAXON_CODE
        description: "主分类"
      others:
        type: array
        items:
          type: string
          example: OTHER_TAXON_CODE
          description: "其它分类"
  AddTaxonsRequest:
    type: object
    description: 添加分类的参数
    properties:
      name:
        type: string
        example: "面包"
        description: 分类名字
      description:
        type: string
        example: "好吃的面包们都在这儿了"
        description: 分类描述
      images:
        type: array
        items: 
          $ref: '#/definitions/Image'
  AuthRequest:
    type: object
    description: '登录或注册'
    properties:
      username:
        type: string
      password:
        type: string
  Token:
    type: object
    description: 'JWT Token'
    properties:
      access_token:
        type: string
        example: 访问Token
      refresh_token:
        type: string
        example: 刷新Token
      expires_at:
        type: integer
        example: 过期日期
      scopes:
        type: array
        items:
          type: string
          example: FOO
      metadata:
        type: object
        additionalProperties:
          type: string
          example:
            aurh: AURH_READ
  PasswordRequest:
    type: object
    description: 修改密码
    properties:
      old:
        type: string
      new:
        type: string
  RefreshToken:
    type: string

  ShopDetails:
    type: object
    properties:
      name:
        type: string
        description: 店铺名字
      create_at:
        type: integer
        format: int64
        description: 创建时间
      modified_at:
        type: integer
        format: int64
        description: 修改时间
      logo:
        type: string
        format: uri
        description: logo图片URL
      introduce:
        type: string
        description: 店铺介绍
      period_at:
        type: integer
        format: int64
        description: 到期时间
      owner:
        $ref: '#/definitions/ShopOwner'
      weixin:
        $ref: '#/definitions/Weixin'
      physical:
        $ref: '#/definitions/PhysicalStore'
  ShopOwner:
    type: object
    description: 店铺所有者
    properties:
      id:
        type: string
        description: bsonID
      name:
        type: string
      nickname:
        type: string
      phone:
        type: string
  PhysicalStore:
    type: object
    description: 实体店
    properties:
      id:
        type: string
        description: bsonID
      name:
        type: string
        description: 实体店名字
      contact:
        type: string
        description: 联系方式(电话号码)
      email:
        type: string
        format: email
        description: 邮箱
      zipCode:
        type: string
        description: 邮编
      address:
        type: string
        description: 地址
      location:
        type: object
        description: 地理位置
        $ref: '#/definitions/Location'
  Weixin:
    type: object
    description: 微信小程序
    properties:
      id:
        type: string
        description: bsonID
      wechat_id:
        type: string
        description: 微信号
      appid:
        type: string
        description: 小程序唯一标识
      secret:
        type: string
        description: 小程序的 app secret
  Location:
    type: object
    description: 经纬度
    properties:
      latitude:
        type: number
        format: double
        description: 经度
      longitude:
        type: number
        format: double
        description: 经度

  Page:
    type: object
    description: 通用页对象.
    properties:
      offset:
        description: 起始位置
        type: integer
        example: 1
      limit:
        description: 预期产品的数量
        type: integer
        example: 10
      total:
        description: 所有分页资源的数量.
        type: integer
        example: 25

  ProductAttributes:
    type: object
    description: 产品属性
    properties:
      code: 
        type: string
        description: 产品属性标识符
        example: mug_material
      type:
        type: string
        enum:
        - text
        - checkbox
        - select
        - integer
        - percent
        - textarea
        - date
        - datetime
        description: >
          产品属性类型:
          * `text` - 
          * `checkbox` - 
          * `select` -
          * `integer` - 
          * `percent` - 
          * `textarea` - 文本区域,产品的更详细的信息
          * `date` - 日期
          * `datetime` - 时间
      configuration:
        type: array
        items:
            type: string
      value:
        type: string
        description: 产品属性值(在产品获取中出现，属性对象中不用)
  AttributesResponse:
    allOf:
      - type: object
        properties:
          id:
            type: string
          updated_at:
            type: integer
            format: int64
            description: 更新时间
          created_at:
            type: integer
            format: int64
            description: 创建时间
      - $ref: '#/definitions/ProductAttributes'
  AttributesPage:
    allOf:
      - $ref: '#/definitions/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/definitions/AttributesResponse'

  ProductOptions:
    type: object
    description: 产品选项
    properties:
      code: 
        type: string
        description: 产品选项标识符
        example: MUG_SIZE
      options:
        type: array
        items: 
          $ref: '#/definitions/ProductOptionsValue'
      value:
        type: string
        description: 产品选项值(在产品获取中出现，选项对象中不用)
  ProductOptionsValue:
    type: object
    properties:
      value: 
        type: string
        example: MUG_SIZE_S
      description:
        type: string
        example: S码
  OptionsPage:
    allOf:
      - $ref: '#/definitions/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/definitions/ProductOptions'

  CreateProductRequest:
    type: object
    properties:
      spu: 
        type: string
        example: LOGAN_MUG_SPU
      name:
        type: string
        example: 洛根的杯子
        description: 产品名字
      description:
        type: string
        example: 洛根的杯子
      mainTaxon:
        type: string
        description: 主分类
      productTaxons:
        type: array
        description: 产品所属的分类
        items: 
          type: string
          example: OTHER_TAXON_CODE
          description: 其它分类
      attributes:
        type: array
        description: 产品的属性
        items:
          $ref: '#/definitions/ProductAttributes'
      options:
        type: array
        description: 产品的选项
        items:
          type: string
          example: mug_type
          description: 选项的标识符
      images:
        type: array
        items:
          $ref: '#/definitions/Image'
        
  Product:
    type: object
    properties:
      spu: 
        type: string
        example: LOGAN_MUG_SPU
        description: 产品SPU(标准化产品单元)
      name:
        type: string
        example: 洛根的杯子
        description: 产品名字
      description:
        type: string
        example: 洛根的杯子
      updated_at:
        type: integer
        format: int64
        description: 更新时间
      created_at:
        type: integer
        format: int64
        description: 创建时间
      mainTaxon:
        type: string
        description: 主分类
      productTaxons:
        type: array
        description: 产品所属的分类
        items: 
          type: string
          example: OTHER_TAXON_CODE
          description: 其它分类
      averageRating:
        type: integer
        description: 平均评分
        example: 4.5
      attributes:
        type: array
        description: 产品的属性
        items:
          $ref: '#/definitions/ProductAttributes'
      associations:
        type: array
        description: 这个产品的相关产品
        items:
          $ref: '#/definitions/AssociationProduct'
      options:
        type: array
        description: 产品的选项
        items:
          $ref: '#/definitions/ProductOptions'
      variants:
        type: array
        description: 产品的变体
        items:
          $ref: '#/definitions/ProductVariants'
      images:
        type: array
        description: 产品的图片
        items:
          $ref: '#/definitions/Image'
      reviews:
        type: array
        description: 产品的评论
        items:
          $ref: '#/definitions/ProductReview'
  ProductPage:
    allOf:
      - $ref: '#/definitions/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/definitions/Product'
  UpdateProductRequest:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
  ProductAttributesRequest:
    type: object
    properties:
      code:
        type: string
        example: mug_color
        description: 产品属性code
      value:
        type: string
        example: yellow
  AssociationProduct:
    type: object
    properties:
      code:
        type: string
        example: similar_products
      spus:
        type: array
        items:
          type: string
          example: SMM
  ProductReview:
    type: object
    description: 产品评论
    properties:
      id:
        type: string
        description: 产品评论Id
      title:
        type: string
        description: 产品评论标题
      comment:
        type: string
        description: 产品评论发表评论
      rating:
        type: integer
        minimum: 1
        maximum: 5
        default: 5
        description: 产品评论等级 (1..5)
      author:
        $ref: '#/definitions/ReviewAuthor'
      status:
        type: string
        enum:
        - new
        - accepted
        - rejected
        description: >
          产品评论状态:
          * `new` - 新的
          * `accepted` - 接受
          * `rejected` - 拒绝
      updated_at:
        type: integer
        format: int64
        description: 更新时间
      created_at:
        type: integer
        format: int64
        description: 创建时间
  ReviewAuthor:
    type: object
    description: 评论作者
    properties:
      username:
        type: string
        description: 用户名
      nickname:
        type: string
        description: 昵称
  ReviewsRequest:
    type: object
    description: 产品评论
    properties:
      title:
        type: string
        description: 产品评论标题
      comment:
        type: string
        description: 产品评论发表评论
      rating:
        type: integer
        minimum: 1
        maximum: 5
        default: 5
        description: 产品评论等级 (1..5)
      author:
        $ref: '#/definitions/ReviewAuthor'
  ReviewsPage:
    allOf:
      - $ref: '#/definitions/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/definitions/ProductReview'
  ProductVariants:
    type: object
    description: 简单产品的SPU和变体的SKU是一样的。若有不同的产品选项，该产品可以有不同的变体列表
    properties:
      sku:
        type: string
        example: LOGAN_MUG_SKU
        description: 产品SKU(库存量单位)
      name:
        type: string
        example: 洛根的杯子
      pricings:
        description: 价格
        $ref: '#/definitions/Pricing'
      tracked:
        type: boolean
        description: 是否跟踪库存
      shippingCategory:
        type: string
        description: 物流种类
      optionValues:
        type: array
        description: 产品可用的选项集合(例如:小、中、大杯)
        items:
          type: string
          example: HAT_SIZE_S
      stock:
        type: integer
        description: 库存量
        example: 100
      images:
        type: array
        items:
          $ref: '#/definitions/Image'
  Pricing:
    type: object
    properties:
      current:
        description: 价格。价格是作为整数存储的，所以默认情况下，它应该除以100.
        type: integer
        example: 1000



security:
  - shopKey: []
  - bearerAuth: []

securityDefinitions:
  bearerAuth:
    type: apiKey
    in: header
    name: Authorization
    description: JWT token
  shopKey:
    type: apiKey
    in: header
    name: X-SHOP-KEY